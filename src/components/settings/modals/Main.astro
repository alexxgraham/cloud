---
const { title } = Astro.props;
---

<button 
  id="openModalBtn"
  class="rounded-md bg-accent py-2 px-4 border border-transparent text-center text-sm text-white transition-all shadow-md hover:shadow-lg focus:bg-accent focus:shadow-none active:bg-accent hover:bg-accent active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none w-fit" 
  type="button"
>
  {title}
</button>

<dialog id="modal" class="p-0 rounded-lg shadow-xl backdrop:bg-black/50">
  <div class="relative w-full min-w-[300px] p-4 bg-white rounded-lg">
    <div class="flex justify-between items-center pb-4 border-b">
      <h3 class="text-xl font-medium text-slate-800">
        {title}
      </h3>
      <button id="closeModalBtn" class="text-gray-500 hover:text-gray-700">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
    
    <div class="py-4">
      <p class="text-gray-600">Are you sure you want to save these changes?</p>
    </div>
    
    <div class="flex justify-end gap-2 pt-4 border-t">
      <button id="cancelBtn" class="px-4 py-2 text-sm text-gray-600 hover:text-gray-800 rounded-md border hover:bg-gray-50">
        Cancel
      </button>
      <button id="confirmBtn" class="px-4 py-2 text-sm text-white bg-accent rounded-md hover:bg-accent/90" type="submit">
        Confirm
      </button>
    </div>
  </div>
</dialog>

<script>
  const modal = document.querySelector('#modal');
  const openModalBtn = document.querySelector('#openModalBtn');
  const closeModalBtn = document.querySelector('#closeModalBtn');
  const cancelBtn = document.querySelector('#cancelBtn');
  const confirmBtn = document.querySelector('#confirmBtn');
  
  if (modal && openModalBtn && closeModalBtn && cancelBtn && confirmBtn) {
    openModalBtn.addEventListener('click', () => {
      modal.showModal();
    });

    const closeModal = () => {
      modal.close();
    };

    closeModalBtn.addEventListener('click', closeModal);
    cancelBtn.addEventListener('click', closeModal);
    
    confirmBtn.addEventListener('click', () => {
      // Submit the parent form
      const form = modal.closest('form');
      if (form) {
        form.submit();
      }
      closeModal();
    });

    // Close when clicking outside
    modal.addEventListener('click', (e) => {
      const dialogDimensions = modal.getBoundingClientRect();
      if (
        e.clientX < dialogDimensions.left ||
        e.clientX > dialogDimensions.right ||
        e.clientY < dialogDimensions.top ||
        e.clientY > dialogDimensions.bottom
      ) {
        closeModal();
      }
    });
  }
</script>